services:
  db:
    image: postgres:16.2
    container_name: ${CONTAINER_PREFIX}-db
    hostname: db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 2s
      retries: 2
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - mylocal

  app:
    build: .
    container_name: ${CONTAINER_PREFIX}-app
    hostname: app
    command: ./app
    depends_on:
      - db
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "50051:50051"
    restart: unless-stopped
    networks:
      - mylocal

#  prometheus:
#    image: prom/prometheus:latest
#    volumes:
#      - ./prometheus:/etc/prometheus/
#      - "/etc/timezone:/etc/timezone:ro"
#      - "/etc/localtime:/etc/localtime:ro"
#    container_name: ${CONTAINER_PREFIX}-prometheus
#    hostname: prometheus
#    command:
#      - --config.file=/etc/prometheus/prometheus.yml
#    depends_on:
#      - app
#    ports:
#      - 9090:9090
#    restart: unless-stopped
#    networks:
#      - mylocal
#
#  grafana:
#    image: jonnyshabli/grafana
#    container_name: ${CONTAINER_PREFIX}-grafana
#    ports:
#      - 3000:3000
#    restart: unless-stopped
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    volumes:
#      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
#      - grafana:/var/lib/grafana
#    networks:
#      - mylocal
#volumes:
#  grafana:
networks:
  mylocal:
    driver: bridge